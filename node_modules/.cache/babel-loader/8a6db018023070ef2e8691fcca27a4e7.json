{"ast":null,"code":"import _asyncToGenerator from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import{Badge,Card}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PopularMovies(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieData=_useState2[0],setMovieData=_useState2[1];// retrieve list of trending movies from server via api\nuseEffect(function(){var API_URL=\"http://localhost:3001/movie/popular\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,resData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(API_URL);case 2:response=_context.sent;_context.next=5;return response.json();case 5:resData=_context.sent;setMovieData(resData.results);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var popularMovies=movieData.map(function(movie,i){return/*#__PURE__*/_jsx(Link,{to:\"movie/\".concat(movie.id),children:/*#__PURE__*/_jsxs(Card,{style:{width:\"18rem\",margin:\"2em\"},children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:\"https://image.tmdb.org/t/p/w500\".concat(movie.poster_path),alt:movie.original_title,style:{width:\"18em\"}}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Card.Title,{children:movie.original_title})})]})},i);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Badge,{bg:\"danger\",style:{width:\"90%\",margin:\"2em\"},children:/*#__PURE__*/_jsx(\"h2\",{children:\"Trending\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"row\",flexWrap:\"wrap\"},children:movieData.length>0?popularMovies:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...\"})})]});}export default PopularMovies;","map":{"version":3,"sources":["/Users/notabhay/Stuff/Git/Movie-Browser/src/components/PopularMovies.js"],"names":["useEffect","useState","Link","Badge","Card","PopularMovies","movieData","setMovieData","API_URL","fetchData","fetch","response","json","resData","results","popularMovies","map","movie","i","id","width","margin","poster_path","original_title","display","flexDirection","flexWrap","length"],"mappings":"0XAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,KAAT,CAAgBC,IAAhB,KAA4B,iBAA5B,C,wFAEA,QAASC,CAAAA,aAAT,EAAyB,CACvB,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA;AACAP,SAAS,CAAC,UAAM,CACd,GAAMQ,CAAAA,OAAO,CAAG,qCAAhB,CACA,GAAMC,CAAAA,SAAS,0FAAG,8KACOC,CAAAA,KAAK,CAACF,OAAD,CADZ,QACVG,QADU,qCAEMA,CAAAA,QAAQ,CAACC,IAAT,EAFN,QAEVC,OAFU,eAGhBN,YAAY,CAACM,OAAO,CAACC,OAAT,CAAZ,CAHgB,sDAAH,kBAATL,CAAAA,SAAS,0CAAf,CAKAA,SAAS,GACV,CARQ,CAQN,EARM,CAAT,CAUA,GAAMM,CAAAA,aAAa,CAAGT,SAAS,CAACU,GAAV,CAAc,SAACC,KAAD,CAAQC,CAAR,CAAc,CAChD,mBACE,KAAC,IAAD,EAAM,EAAE,iBAAWD,KAAK,CAACE,EAAjB,CAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,KAA1B,CAAb,wBACE,KAAC,IAAD,CAAM,GAAN,EACE,OAAO,CAAC,KADV,CAEE,GAAG,0CAAoCJ,KAAK,CAACK,WAA1C,CAFL,CAGE,GAAG,CAAEL,KAAK,CAACM,cAHb,CAIE,KAAK,CAAE,CAAEH,KAAK,CAAE,MAAT,CAJT,EADF,cAOE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,IAAD,CAAM,KAAN,WAAaH,KAAK,CAACM,cAAnB,EADF,EAPF,GADF,EAAoCL,CAApC,CADF,CAeD,CAhBqB,CAAtB,CAkBA,mBACE,oCACE,KAAC,KAAD,EAAO,EAAE,CAAC,QAAV,CAAmB,KAAK,CAAE,CAAEE,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,KAAxB,CAA1B,uBACE,gCADF,EADF,cAIE,YAAK,KAAK,CAAE,CAAEG,OAAO,CAAE,MAAX,CAAmBC,aAAa,CAAE,KAAlC,CAAyCC,QAAQ,CAAE,MAAnD,CAAZ,UACGpB,SAAS,CAACqB,MAAV,CAAmB,CAAnB,CAAuBZ,aAAvB,cAAuC,kCAD1C,EAJF,GADF,CAUD,CAED,cAAeV,CAAAA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Badge, Card } from \"react-bootstrap\";\n\nfunction PopularMovies() {\n  const [movieData, setMovieData] = useState([]);\n  // retrieve list of trending movies from server via api\n  useEffect(() => {\n    const API_URL = \"http://localhost:3001/movie/popular\";\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setMovieData(resData.results);\n    };\n    fetchData();\n  }, []);\n\n  const popularMovies = movieData.map((movie, i) => {\n    return (\n      <Link to={`movie/${movie.id}`} key={i}>\n        <Card style={{ width: \"18rem\", margin: \"2em\" }}>\n          <Card.Img\n            variant=\"top\"\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.original_title}\n            style={{ width: \"18em\" }}\n          />\n          <Card.Body>\n            <Card.Title>{movie.original_title}</Card.Title>\n          </Card.Body>\n        </Card>\n      </Link>\n    );\n  });\n\n  return (\n    <div>\n      <Badge bg=\"danger\" style={{ width: \"90%\", margin: \"2em\" }}>\n        <h2>Trending</h2>\n      </Badge>\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {movieData.length > 0 ? popularMovies : <h2>Loading...</h2>}\n      </div>\n    </div>\n  );\n}\n\nexport default PopularMovies;\n"]},"metadata":{},"sourceType":"module"}