{"ast":null,"code":"var _jsxFileName = \"/Users/notabhay/Stuff/Git/Movie-Browser/src/components/ActorView.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ActorView() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [actorData, setActorData] = useState([]);\n  const [filmData, setFilmData] = useState([]); // Get actor data from API\n\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/person/${id}`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setActorData(resData);\n    };\n\n    fetchData();\n  }, [id]); // Get actor filmography from API\n\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/person/${id}/credits`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setFilmData(resData.cast);\n    };\n\n    fetchData();\n  }, [id]);\n  const filmography = filmData.map((film, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${film.id}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            margin: '2em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/w500${film.poster_path}`,\n            alt: film.original_title,\n            style: {\n              width: '18em'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: film.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: actorData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${actorData.profile_path}`,\n      alt: actorData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: actorData.biography\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"danger\",\n      style: {\n        width: '90%',\n        margin: '2em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filmography\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      children: filmography\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ActorView, \"Vm+VkAFixX6hTHvwjc2cvFgBIL0=\", false, function () {\n  return [useParams];\n});\n\n_c = ActorView;\nexport default ActorView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorView\");","map":{"version":3,"sources":["/Users/notabhay/Stuff/Git/Movie-Browser/src/components/ActorView.js"],"names":["useEffect","useState","Badge","Card","Link","useParams","ActorView","id","actorData","setActorData","filmData","setFilmData","API_URL","fetchData","response","fetch","resData","json","cast","filmography","map","film","i","width","margin","poster_path","original_title","name","profile_path","biography","display","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Badge, Card } from \"react-bootstrap\"\nimport { Link, useParams } from \"react-router-dom\"\n\nfunction ActorView() {\n    const { id } = useParams()\n    const [actorData, setActorData] = useState([])\n    const [filmData, setFilmData] = useState([])\n\n    // Get actor data from API\n    useEffect(() => {\n        const API_URL = `http://localhost:3001/person/${id}`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setActorData(resData)\n        }\n        fetchData()\n    }, [id])\n\n    // Get actor filmography from API\n    useEffect(() => {\n        const API_URL = `http://localhost:3001/person/${id}/credits`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setFilmData(resData.cast)\n        }\n        fetchData()\n    }, [id])\n\n    const filmography = filmData.map((film, i) => {\n        return (\n            <div key={i}>\n                <Link to={`/movie/${film.id}`}>\n                    <Card style={{ width: '18rem' , margin: '2em'}} key={i}>\n                        <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${film.poster_path}`} alt={film.original_title} style={{ width: '18em'}} />\n                        <Card.Body>\n                            <Card.Title>{film.original_title}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Link>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <h1>{actorData.name}</h1>\n            <img src={`https://image.tmdb.org/t/p/w500${actorData.profile_path}`} alt={actorData.name}></img>\n            <p>{actorData.biography}</p>\n            <Badge bg=\"danger\" style={{ width: '90%', margin: '2em' }}>\n                <h2>Filmography</h2>\n            </Badge>\n            <div style={{ display: 'flex' , flexDirection: 'row' , flexWrap: 'wrap' }}>\n                {filmography}\n            </div>\n        </div>\n    )\n}\n\nexport default ActorView"]},"metadata":{},"sourceType":"module"}