{"ast":null,"code":"import _asyncToGenerator from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/notabhay/Stuff/Git/Movie-Browser/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useState}from\"react\";import{Badge,Card}from\"react-bootstrap\";import{Link,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MovieView(){var _useParams=useParams(),id=_useParams.id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieData=_useState2[0],setMovieData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),castData=_useState4[0],setCastData=_useState4[1];// Get movie data from API\nuseEffect(function(){var API_URL=\"http://localhost:3001/movie/\".concat(id);var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,resData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(API_URL);case 2:response=_context.sent;_context.next=5;return response.json();case 5:resData=_context.sent;setMovieData(resData);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[id]);// Get cast from API\nuseEffect(function(){var API_URL=\"http://localhost:3001/movie/\".concat(id,\"/credits\");var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,resData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(API_URL);case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:resData=_context2.sent;console.log(resData);setCastData(resData.cast);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[id]);var cast=castData.map(function(actor,i){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/actor/\".concat(actor.id),children:/*#__PURE__*/_jsxs(Card,{style:{width:\"18rem\",margin:\"2em\"},children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:\"https://image.tmdb.org/t/p/w500\".concat(actor.profile_path),alt:actor.name,style:{width:\"18em\"}}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Card.Title,{children:[actor.name,\" as \",actor.character]})})]},i)})},i);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:movieData.original_title}),/*#__PURE__*/_jsx(\"img\",{src:\"https://image.tmdb.org/t/p/w500\".concat(movieData.backdrop_path),alt:movieData.original_title}),/*#__PURE__*/_jsx(\"p\",{children:movieData.overview}),/*#__PURE__*/_jsx(Badge,{bg:\"danger\",style:{width:\"90%\",margin:\"2em\"},children:/*#__PURE__*/_jsx(\"h2\",{children:\"Cast\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"row\",flexWrap:\"wrap\"},children:cast}),/*#__PURE__*/_jsx(Badge,{bg:\"danger\",style:{width:\"90%\",margin:\"2em\"},children:/*#__PURE__*/_jsx(\"h2\",{children:\"Reviews\"})})]});}export default MovieView;","map":{"version":3,"sources":["/Users/notabhay/Stuff/Git/Movie-Browser/src/components/MovieView.js"],"names":["useEffect","useState","Badge","Card","Link","useParams","MovieView","id","movieData","setMovieData","castData","setCastData","API_URL","fetchData","fetch","response","json","resData","console","log","cast","map","actor","i","width","margin","profile_path","name","character","original_title","backdrop_path","overview","display","flexDirection","flexWrap"],"mappings":"0XAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,KAAT,CAAgBC,IAAhB,KAA4B,iBAA5B,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,eAAeD,SAAS,EAAxB,CAAQE,EAAR,YAAQA,EAAR,CACA,cAAkCN,QAAQ,CAAC,EAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAgCR,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eAEA;AACAX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,OAAO,uCAAkCL,EAAlC,CAAb,CACA,GAAMM,CAAAA,SAAS,0FAAG,8KACOC,CAAAA,KAAK,CAACF,OAAD,CADZ,QACVG,QADU,qCAEMA,CAAAA,QAAQ,CAACC,IAAT,EAFN,QAEVC,OAFU,eAGhBR,YAAY,CAACQ,OAAD,CAAZ,CAHgB,sDAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAKAA,SAAS,GACV,CARQ,CAQN,CAACN,EAAD,CARM,CAAT,CAUA;AACAP,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,OAAO,uCAAkCL,EAAlC,YAAb,CACA,GAAMM,CAAAA,SAAS,2FAAG,oLACOC,CAAAA,KAAK,CAACF,OAAD,CADZ,QACVG,QADU,uCAEMA,CAAAA,QAAQ,CAACC,IAAT,EAFN,QAEVC,OAFU,gBAGhBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACAN,WAAW,CAACM,OAAO,CAACG,IAAT,CAAX,CAJgB,wDAAH,kBAATP,CAAAA,SAAS,2CAAf,CAMAA,SAAS,GACV,CATQ,CASN,CAACN,EAAD,CATM,CAAT,CAWA,GAAMa,CAAAA,IAAI,CAAGV,QAAQ,CAACW,GAAT,CAAa,SAACC,KAAD,CAAQC,CAAR,CAAc,CACtC,mBACE,kCACE,KAAC,IAAD,EAAM,EAAE,kBAAYD,KAAK,CAACf,EAAlB,CAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAE,CAAEiB,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,KAA1B,CAAb,wBACE,KAAC,IAAD,CAAM,GAAN,EACE,OAAO,CAAC,KADV,CAEE,GAAG,0CAAoCH,KAAK,CAACI,YAA1C,CAFL,CAGE,GAAG,CAAEJ,KAAK,CAACK,IAHb,CAIE,KAAK,CAAE,CAAEH,KAAK,CAAE,MAAT,CAJT,EADF,cAOE,KAAC,IAAD,CAAM,IAAN,wBACE,MAAC,IAAD,CAAM,KAAN,YACGF,KAAK,CAACK,IADT,QACmBL,KAAK,CAACM,SADzB,GADF,EAPF,GAAqDL,CAArD,CADF,EADF,EAAUA,CAAV,CADF,CAmBD,CApBY,CAAb,CAsBA,mBACE,oCACE,oBAAKf,SAAS,CAACqB,cAAf,EADF,cAEE,YACE,GAAG,0CAAoCrB,SAAS,CAACsB,aAA9C,CADL,CAEE,GAAG,CAAEtB,SAAS,CAACqB,cAFjB,EAFF,cAME,mBAAIrB,SAAS,CAACuB,QAAd,EANF,cAOE,KAAC,KAAD,EAAO,EAAE,CAAC,QAAV,CAAmB,KAAK,CAAE,CAAEP,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,KAAxB,CAA1B,uBACE,4BADF,EAPF,cAUE,YAAK,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAX,CAAmBC,aAAa,CAAE,KAAlC,CAAyCC,QAAQ,CAAE,MAAnD,CAAZ,UACGd,IADH,EAVF,cAaE,KAAC,KAAD,EAAO,EAAE,CAAC,QAAV,CAAmB,KAAK,CAAE,CAAEI,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,KAAxB,CAA1B,uBACE,+BADF,EAbF,GADF,CAmBD,CAED,cAAenB,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction MovieView() {\n  const { id } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const [castData, setCastData] = useState([]);\n\n  // Get movie data from API\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}`;\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setMovieData(resData);\n    };\n    fetchData();\n  }, [id]);\n\n  // Get cast from API\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}/credits`;\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      console.log(resData);\n      setCastData(resData.cast);\n    };\n    fetchData();\n  }, [id]);\n\n  const cast = castData.map((actor, i) => {\n    return (\n      <div key={i}>\n        <Link to={`/actor/${actor.id}`}>\n          <Card style={{ width: \"18rem\", margin: \"2em\" }} key={i}>\n            <Card.Img\n              variant=\"top\"\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              style={{ width: \"18em\" }}\n            />\n            <Card.Body>\n              <Card.Title>\n                {actor.name} as {actor.character}\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        </Link>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h1>{movieData.original_title}</h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieData.backdrop_path}`}\n        alt={movieData.original_title}\n      ></img>\n      <p>{movieData.overview}</p>\n      <Badge bg=\"danger\" style={{ width: \"90%\", margin: \"2em\" }}>\n        <h2>Cast</h2>\n      </Badge>\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {cast}\n      </div>\n      <Badge bg=\"danger\" style={{ width: \"90%\", margin: \"2em\" }}>\n        <h2>Reviews</h2>\n      </Badge>\n    </div>\n  );\n}\n\nexport default MovieView;\n"]},"metadata":{},"sourceType":"module"}