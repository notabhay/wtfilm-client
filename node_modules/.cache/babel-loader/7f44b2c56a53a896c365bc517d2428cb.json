{"ast":null,"code":"var _jsxFileName = \"/Users/notabhay/Stuff/Git/Movie-Browser/src/components/MovieView.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieView() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const [castData, setCastData] = useState([]); // Get movie data from API\n\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setMovieData(resData);\n    };\n\n    fetchData();\n  }, [id]); // Get cast from API\n\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}/credits`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      console.log(resData);\n      setCastData(resData.cast);\n    };\n\n    fetchData();\n  }, [id]);\n  const cast = castData.map((actor, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/actor/${actor.id}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\",\n            margin: \"2em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n            alt: actor.name,\n            style: {\n              width: \"18em\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [actor.name, \" as \", actor.character]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieData.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${movieData.backdrop_path}`,\n      alt: movieData.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movieData.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"danger\",\n      style: {\n        width: \"90%\",\n        margin: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      children: cast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n      bg: \"danger\",\n      style: {\n        width: \"90%\",\n        margin: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieView, \"xLI5wkid+kZph2z7XV1Im83d5Kw=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieView;\nexport default MovieView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieView\");","map":{"version":3,"sources":["/Users/notabhay/Stuff/Git/Movie-Browser/src/components/MovieView.js"],"names":["useEffect","useState","Badge","Card","Link","useParams","MovieView","id","movieData","setMovieData","castData","setCastData","API_URL","fetchData","response","fetch","resData","json","console","log","cast","map","actor","i","width","margin","profile_path","name","character","original_title","backdrop_path","overview","display","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction MovieView() {\n  const { id } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const [castData, setCastData] = useState([]);\n\n  // Get movie data from API\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}`;\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setMovieData(resData);\n    };\n    fetchData();\n  }, [id]);\n\n  // Get cast from API\n  useEffect(() => {\n    const API_URL = `http://localhost:3001/movie/${id}/credits`;\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      console.log(resData);\n      setCastData(resData.cast);\n    };\n    fetchData();\n  }, [id]);\n\n  const cast = castData.map((actor, i) => {\n    return (\n      <div key={i}>\n        <Link to={`/actor/${actor.id}`}>\n          <Card style={{ width: \"18rem\", margin: \"2em\" }} key={i}>\n            <Card.Img\n              variant=\"top\"\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              style={{ width: \"18em\" }}\n            />\n            <Card.Body>\n              <Card.Title>\n                {actor.name} as {actor.character}\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        </Link>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h1>{movieData.original_title}</h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieData.backdrop_path}`}\n        alt={movieData.original_title}\n      ></img>\n      <p>{movieData.overview}</p>\n      <Badge bg=\"danger\" style={{ width: \"90%\", margin: \"2em\" }}>\n        <h2>Cast</h2>\n      </Badge>\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {cast}\n      </div>\n      <Badge bg=\"danger\" style={{ width: \"90%\", margin: \"2em\" }}>\n        <h2>Reviews</h2>\n      </Badge>\n    </div>\n  );\n}\n\nexport default MovieView;\n"]},"metadata":{},"sourceType":"module"}